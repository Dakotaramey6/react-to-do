{"ast":null,"code":"var _jsxFileName = \"/Users/dakotaramey/Documents/GitHub/react-to-do/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { UserInput } from \"./UserInput\";\nimport { StatBar } from \"./StatBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState([]);\n  const [currentToDo, setCurrentToDo] = useState(\"\");\n  const [pos, setPos] = useState(0);\n  const [background, setBackground] = useState(\"lightPink\");\n  const [updatedTask, setUpdatedTask] = useState([]);\n  let isChecked = false;\n  const handleSubmit = e => {\n    setToDo(prev => [...prev, {\n      pos,\n      background,\n      id: Math.floor(Math.random() * 10000),\n      value: currentToDo,\n      isChecked\n    }]);\n    e.preventDefault();\n    setPos(prev => prev + 1);\n    setCurrentToDo(\"\");\n    setBackground(() => pos % 2 === 0 ? \"lightGreen\" : \"lightPink\");\n  };\n  const handleChange = ({\n    target\n  }) => {\n    setCurrentToDo(() => target.value);\n  };\n  const handleRemove = (setState, id) => {\n    setState(prev => prev.filter(toRemove => toRemove.id !== id));\n  };\n  const handleTaskComplete = id => {\n    setUpdatedTask(() => toDo.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          isChecked: !task.isChecked\n        };\n      }\n      return task;\n    }));\n    setToDo(updatedTask);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onSubmit: handleSubmit,\n      toDo: toDo,\n      currentToDo: currentToDo,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: toDo.map(toDos => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: toDos.id,\n        style: {\n          backgroundColor: toDos.background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"isChecked\",\n          type: \"checkbox\",\n          defaultChecked: toDos.isChecked,\n          onChange: () => handleTaskComplete(toDos.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"text\",\n          children: toDos.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"todo-span\",\n          onClick: () => handleRemove(setToDo, toDos.id),\n          children: \"\\uD83C\\uDD87\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, Math.floor(Math.random() * 10000), true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n      toDo: toDo,\n      updatedTask: updatedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N34ghdnBZpq1JqABt80FRSlmUxE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserInput","StatBar","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","currentToDo","setCurrentToDo","pos","setPos","background","setBackground","updatedTask","setUpdatedTask","isChecked","handleSubmit","e","prev","id","Math","floor","random","value","preventDefault","handleChange","target","handleRemove","setState","filter","toRemove","handleTaskComplete","map","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","toDos","style","backgroundColor","name","type","defaultChecked","onClick","_c","$RefreshReg$"],"sources":["/Users/dakotaramey/Documents/GitHub/react-to-do/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { UserInput } from \"./UserInput\";\nimport { StatBar } from \"./StatBar\";\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n  const [currentToDo, setCurrentToDo] = useState(\"\");\n  const [pos, setPos] = useState(0);\n  const [background, setBackground] = useState(\"lightPink\");\n  const [updatedTask, setUpdatedTask] = useState([]);\n\n  let isChecked = false;\n\n  const handleSubmit = (e) => {\n    setToDo((prev) => [\n      ...prev,\n      {\n        pos,\n        background,\n        id: Math.floor(Math.random() * 10000),\n        value: currentToDo,\n        isChecked,\n      },\n    ]);\n    e.preventDefault();\n    setPos((prev) => prev + 1);\n    setCurrentToDo(\"\");\n    setBackground(() => (pos % 2 === 0 ? \"lightGreen\" : \"lightPink\"));\n  };\n\n  const handleChange = ({ target }) => {\n    setCurrentToDo(() => target.value);\n  };\n\n  const handleRemove = (setState, id) => {\n    setState((prev) => prev.filter((toRemove) => toRemove.id !== id));\n  };\n\n  const handleTaskComplete = (id) => {\n    setUpdatedTask(() =>\n      toDo.map((task) => {\n        if (id === task.id) {\n          return { ...task, isChecked: !task.isChecked };\n        }\n        return task;\n      })\n    );\n\n    setToDo(updatedTask);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Tasks</h1>\n      <UserInput\n        onSubmit={handleSubmit}\n        toDo={toDo}\n        currentToDo={currentToDo}\n        onChange={handleChange}\n      />\n      <ul>\n        {toDo.map((toDos) => (\n          <li\n            key={Math.floor(Math.random() * 10000)}\n            id={toDos.id}\n            style={{ backgroundColor: toDos.background }}\n          >\n            <input\n              name=\"isChecked\"\n              type=\"checkbox\"\n              defaultChecked={toDos.isChecked}\n              onChange={() => handleTaskComplete(toDos.id)}\n            />\n            <span id=\"text\">{toDos.value}</span>\n            <span\n              id=\"todo-span\"\n              onClick={() => handleRemove(setToDo, toDos.id)}\n            >\n              ðŸ†‡\n            </span>\n          </li>\n        ))}\n      </ul>\n      <StatBar toDo={toDo} updatedTask={updatedTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}